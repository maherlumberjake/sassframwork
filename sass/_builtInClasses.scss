@use "./colors" as *;
@use "./builtInUnits" as *;
@use "./mixin" as *;
@use "./globals" as *;

table.Main {
    width: 100%;
    border-collapse: collapse;

    td {
        padding: 0.5em;
        outline: none;
        gap: 0px;
        border-right: 0.2em solid $lightGray;
    }

    tr {
        color: white;
    }
}

/// add main class to table element to give it some basic styling 
.arrow {
    width: 500px;
    height: 500px;
    margin: 50px auto;
    background-color: $green;
    clip-path: polygon(66.66% 66.66%, 66.66% 90%, 100% 50%, 66.66% 10%, 66.66% 33.33%, 10% 33.33%, 10% 66.66%);

}

/// add arrow class to any element with no text inside to make it look like arrow
.btn-primary {
    @include btn(flex-start, 1.2rem, $mainColor);
}

.btn-secondary {
    @include btn(flex-start, 1.2rem, $altColor);

}

.btn-success {
    @include btn(flex-start, 1.2rem, $green);

}

.btn-danger {
    @include btn(flex-start, 1.2rem, $red);
}

.btn-warning {
    @include btn(flex-start, 1.2rem, $yellow);
}

.btn-info {
    @include btn(flex-start, 1.2rem, $blue);
}

///some built in btns above its ready to use just add the class to any elment
.btn-info.scale:hover,
.btn-warning.scale:hover,
.btn-danger.scale:hover,
.btn-success.scale:hover,
.btn-secondary.scale:hover,
.btn-primary.scale:hover {
    transform: scale(1.07);
    -webkit-transform: scale(1.07);
    -moz-transform: scale(1.07);
    -ms-transform: scale(1.07);
    -o-transform: scale(1.07);
}

.btn-info.opacity:hover,
.btn-warning.opacity:hover,
.btn-danger.opacity:hover,
.btn-success.opacity:hover,
.btn-secondary.opacity:hover,
.btn-primary.opacity:hover .btn.opacity:hover {
    opacity: 0.85;
}

///btns transations


.oval {
    border-radius: 100vh;
    -webkit-border-radius: 100vh;
    -moz-border-radius: 100vh;
    -ms-border-radius: 100vh;
    -o-border-radius: 100vh;
}

///oval borders

.containerAlpha {
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    font-size: 1.2rem;
    width: 100%;
    gap: 1.5em;
    padding: 1em 2em;
    margin-inline: auto;

    h3,
    h4,
    h5 {
        font-size: 2.4rem;
    }

    h3,
    h4,
    h5,
    h6 {
        text-align: center;

    }

    @for $i from 1 through 12 {
        .col#{-$i} {
            grid-column: span $i !important;
        }
    }
}

///containerAlpha is a grid container which use col-i to custumize the childrens insde(have gaps and padding)

.containerBeta {
    display: flex;
    align-items: center;
    font-size: 1.2rem;
    $gridTotalCol : 12;
    width: 100%;
    padding: 1em 2.5em;

    @for $i from 1 through $gridTotalCol {
        .col#{-$i} {
            width: percentage($i / $gridTotalCol);
        }
    }
}

///containerBeta is a flex container which use col-i to custumize the childrens insde
@for $i from 1 through 10 {
    .width-#{$i*10} {
        width: #{$i*10 +"%"};
        // $i : $i + 10;
    }
}

///the loop above for width class which represent a width in percentage as class (width-10)
.disaplyed {
    position: relative;
    cursor: none;

    &::after {
        z-index: 1;
        position: absolute;
        inset: 0px;
        background-color: rgba(128, 128, 128, 0.266);
        content: '';
    }
}

///disaplyed make any element disaple by making darker overlay above the element
.active {
    background-color: $mainColor !important;
    color: white !important;
}

/// active class for element in active mode
.toolTip-primary {
    position: relative;
    width: fit-content;

    &::after {
        z-index: 9999;
        cursor: help;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $mainColor;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

.toolTip-secondary {
    position: relative;
    width: fit-content;

    &::after {
        z-index: 9999;
        cursor: help;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $altColor;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

.toolTip-success {
    position: relative;

    width: fit-content;

    &::after {
        z-index: 9999;
        cursor: help;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $green;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

.toolTip-warning {
    position: relative;
    width: fit-content;

    &::after {
        z-index: 9999;
        cursor: help;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $yellow;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

.toolTip-danger {
    position: relative;
    width: fit-content;

    &::after {
        z-index: 9999;
        cursor: help;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $red;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

.toolTip-info {
    position: relative;
    width: fit-content;

    &::after {
        cursor: help;
        z-index: 9999;
        font-family: $btnFont;
        display: block;
        position: absolute;
        color: white;
        padding: 0.25em .6em;
        text-transform: capitalize;
        left: 110%;
        width: max-content;
        content: attr(data-toolTip);
        top: 0px;
        background: $blue;
        opacity: 0;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
        transition: 0.6s ease opacity;
        -webkit-transition: 0.6s ease opacity;
        -moz-transition: 0.6s ease opacity;
        -ms-transition: 0.6s ease opacity;
        -o-transition: 0.6s ease opacity;
    }

    &:hover::after {
        opacity: 1;
    }
}

///about toolTip just add the class toolTip-(spicifec name) to element item in DOM ,
/// and add to the same element data-toolTIp="the toolTIp msg goes here"
.odd {
    color: white;
    background-color: $darkGray;
    padding: 0.15em 0.25em;
}

/// odd and even are the way yo make contrast between close elements like list of items
.even {
    color: white;
    background-color: $gray;
    padding: 0.15em 0.25em;
}

///!warning circle btn only accept one icon or one charcter 
.circleBtn {
    font-size: 2rem;
    color: white;
    width: 0.5em;
    padding: .6em;
    height: 0.5em;
    display: flex;
    justify-content: center;
    background-color: $mainColor;
    border-radius: 50%;
    -webkit-border-radius: 50%;
    -moz-border-radius: 50%;
    -ms-border-radius: 50%;
    -o-border-radius: 50%;
    align-items: center;
}

input.inputAlpha {
    outline: none;
    font-family: $altFont;
    border: 1px solid $mainColor;
    width: 100%;
    height: 1.5em;
    font-size: 1.1rem;
    padding: 0.1em 0.3em;
    display: flex;
    align-items: center box-shadow;
    transition: .4s ease;
    -webkit-transition: .4s ease;
    -moz-transition: .4s ease;
    -ms-transition: .4s ease;
    -o-transition: .4s ease;
    border-radius: 0.2em;
    -webkit-border-radius: 0.2em;
    -moz-border-radius: 0.2em;
    -ms-border-radius: 0.2em;
    -o-border-radius: 0.2em;

    &:focus {
        @include boxSh(1, 7, 0, $mainColor, "false")
    }
}

/// inputAlpha :basic input style (have focus event and a bit more)
select {
    background-color: $lightGray;
    outline: $darkGray;
    padding: 0.2em 0.4em;
    color: white;
    border-radius: 0.2em;
    -webkit-border-radius: 0.2em;
    -moz-border-radius: 0.2em;
    -ms-border-radius: 0.2em;
    -o-border-radius: 0.2em;
    transition: .4s ease background-color;
    -webkit-transition: .4s ease background-color;
    -moz-transition: .4s ease background-color;
    -ms-transition: .4s ease background-color;
    -o-transition: .4s ease background-color;

    &:focus,
    &:hover {
        background-color: $gray;
    }

    option {
        padding: 0.1em 0.2em;
        color: white;
        background: $lightGray;
    }
}

/// select: its target (select input)


input[type="file"] {
    width: 8em;

    &::-webkit-file-upload-button {
        text-align: center;
        background-color: $lightGray;
        color: white;
        font-family: $btnFont;
        text-transform: capitalize;
        border: 0.1em solid $gray;
        width: 100%;
        padding: 0.2em 0.4em;
        cursor: pointer;
        outline: none;
        border-radius: 0.2em;
        -webkit-border-radius: 0.2em;
        -moz-border-radius: 0.2em;
        -ms-border-radius: 0.2em;
        -o-border-radius: 0.2em;
    }
}

/// customize of the input[file]
///
.pushRight {
    margin-left: auto;
}

.pushLeft {
    margin-right: auto;
}

.pushUp {
    margin-bottom: auto;
}

.pushDown {
    margin-top: auto;
}

.center {
    text-align: center;
    margin-inline: auto;
}

/// these above are fast positiong classes (op with containers{Alpha-Beta}) 
.basicPadding {
    padding: .25em 1em;
}

///as the name said basic padding!